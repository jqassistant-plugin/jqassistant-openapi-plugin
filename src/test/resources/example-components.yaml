openapi: 3.1.0
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
paths: {}

components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string

  responses:
    200:
      description: "Successful operation"
    418:
      content:
        multipart/form-data_example:
          schema:
            type: object
            properties:
              id:
                type: string
              address:
                type: object
              historyMetadata:
                description: metadata in XML format
                type: object
              profileImage:
                type: object
          example: "{ id: \"idString\", address: { }, historyMetadata: { }, profileImage: { } }"
          encoding:
            historyMetadata:
              contentType: application/xml; charset=utf-8
            profileImage:
              contentType: image/png, image/jpeg
              headers:
                X-Rate-Limit-Limit:
                  description: The number of allowed requests in the current period
                  schema:
                    type: integer
        multipart/form-data_examples:
          schema:
            type: object
            properties:
              id:
                type: string
              address:
                type: object
              historyMetadata:
                description: metadata in XML format
                type: object
              profileImage:
                type: object
          examples:
            example1:
              value: "{ id: \"idString1\", address: { }, historyMetadata: { }, profileImage: { } }"
            example2:
              value: "{ id: \"idString2\", address: { }, historyMetadata: { }, profileImage: { } }"
          encoding:
        multipart/form-data_empty:
          schema:
          examples:
          encoding:


  parameters:
    userId:
      name: id
      in: path
      description: "User ID"
      required: true
      schema:
        type: object

  examples:
    UserData:
      summary: "Example user data"

  requestBodies:
    UserBody:
      description: "A user object that needs to be added to the system"
      content:
        application/json:
          schema:
            type: object
          encoding:
            property1:
              contentType: application/xml; charset=utf-8
              headers:
                X-Rate-Limit-Limit:
                  description: The number of allowed requests in the current period
                  schema:
                    type: integer
              explode: true
              allowReserved: true
              style: spaceDelimited
            property2:
              contentType:
              headers:
              explode:
              allowReserved:
              style:


  headers:
    X-Request-Id:
      description: "Request ID header"
      schema:
        type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key

  links:
    UserLink:
      operationId: "getUser"

  callbacks:
    MyWebhook:
      '{$request.query.callbackUrl}':
        post:
          requestBody:
            description: "Webhook payload"
            content:
              application/json:
                schema:
                  type: object
          responses:
            '200':
              description: Successful response