openapi: 3.1.0
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
paths: {}

components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string

  responses:
    Success:
      description: "Successful operation"

  parameters:
    param_all_fields_example:
      name: param_all_fields_example
      in: header
      description: token to be passed as a header
      required: true
      deprecated: true
      allowEmptyValue: true
      style: simple
      explode: true
      allowReserved: true
      schema:
        type: array
        items:
          type: integer
          format: int64
      example: "[1,2]"
    param_all_fields_examples:
      name: param_all_fields_examples
      in: query
      description: token to be passed as a header
      required: false
      deprecated: false
      allowEmptyValue: false
      style: simple
      explode: false
      allowReserved: false
      schema:
        type: array
        items:
          type: integer
          format: int64
      examples:
        example1:
          value: "example value1"
        example2:
          value: "example value2"
    param_empty_fields:
      name: param_empty_fields
      in: header
      description:
      required:
      deprecated:
      allowEmptyValue:
      style:
      explode:
      allowReserved:
      schema:
      examples:
    param_no_fields:
      name: param_no_fields
      in: header

  examples:
    UserData:
      summary: "Example user data"

  requestBodies:
    UserBody:
      description: "A user object that needs to be added to the system"
      content:
        application/json:
          schema:
            type: object

  headers:
    X-Request-Id:
      description: "Request ID header"
      schema:
        type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key

  links:
    UserLink:
      operationId: "getUser"

  callbacks:
    MyWebhook:
      '{$request.query.callbackUrl}':
        post:
          requestBody:
            description: "Webhook payload"
            content:
              application/json:
                schema:
                  type: object
          responses:
            '200':
              description: Successful response